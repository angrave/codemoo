// Generated by CoffeeScript 1.6.2
(function() {
  "use strict";
  var bs_cl, controller, editor, progress, read_classfile, root, stdout, user_input;

  root = this;

  stdout = null;

  user_input = null;

  controller = null;

  editor = null;

  progress = null;

  bs_cl = null;

  read_classfile = function(cls, cb, failure_cb) {
    var data, e, fullpath, path, _i, _len, _ref;

    cls = cls.slice(1, -1);
    _ref = jvm.system_properties['java.class.path'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      path = _ref[_i];
      fullpath = "" + path + cls + ".class";
      try {
        data = util.bytestr_to_array(node.fs.readFileSync(fullpath));
      } catch (_error) {
        e = _error;
        data = null;
      }
      if (data != null) {
        return cb(data);
      }
    }
    return failure_cb(function() {
      throw new Error("Error: No file found for class " + cls + ".");
    });
  };

  root.preload = function() {
    var data, done, e, end_untar, file_count, start_untar, writeOneFile;

    try {
      data = node.fs.readFileSync("/home/doppio/browser/mini-rt.tar");
    } catch (_error) {
      e = _error;
      console.error(e);
    }
    if (data != null) {
      file_count = 0;
      done = false;
      start_untar = (new Date).getTime();
      writeOneFile = function(percent, path, file) {
        var base, base_dir, cls, ext, _ref;

        update_bar(percent, path);
        base_dir = 'vendor/classes/';
        _ref = path.split('.'), base = _ref[0], ext = _ref[1];
        file_count++;
        cls = base.substr(base_dir.length);
        return node.fs.writeFileSync(path, util.array_to_bytestr(file), 'utf8', true);
      };
      untar(new util.BytesArray(util.bytestr_to_array(data)), writeOneFile);
      end_untar = (new Date).getTime();
      console.log("Untarring took a total of " + (end_untar - start_untar) + "ms.");
    }
  };

  root.saveFile = function(fname, contents) {
    if (contents[contents.length - 1] !== '\n') {
      contents += '\n';
    }
    return node.fs.writeFileSync(fname, contents);
  };

  root.compile = function(stdout, fname, finish_cb) {
    var my_cb, rs, start_compile;

    start_compile = (new Date).getTime();
    jvm.set_classpath('/home/doppio/vendor/classes/', './:/home/doppio');
    user_input = function(resume) {
      return resume('');
    };
    bs_cl = new ClassLoader.BootstrapClassLoader(read_classfile);
    rs = new runtime.RuntimeState(stdout, user_input, bs_cl);
    my_cb = function() {
      var end_compile;

      end_compile = (new Date).getTime();
      console.log("javac took a total of " + (end_compile - start_compile) + "ms.");
      return finish_cb();
    };
    jvm.run_class(rs, 'classes/util/Javac', args, my_cb);
  };

  root.exec = function(stdout, stdin, classname, class_args, finish_cb) {
    var rs;

    bs_cl = new ClassLoader.BootstrapClassLoader(read_classfile);
    rs = new runtime.RuntimeState(stdout, stdin, bs_cl);
    jvm.run_class(rs, class_name, class_args, finish_cb);
  };

  root.abortjvm = function() {
    return alert('Abort! Abort! Not Yet..');
  };

}).call(this);

/*
//@ sourceMappingURL=doppio-wrapper.map
*/
